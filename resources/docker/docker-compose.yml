version: "3.8" # DockerComposeAPI의 version

services: # 컨테이너
  app: # Django
    build:
      context: . # Dockerfile의 위치
      args:
        - DEV=true
    ports: # 이미지 : 컨테이너
      - "8000:8000"
    volumes: # 로컬의 ./app을 docker의 /app에 저장
      - ./app:/app
    command: >
      sh -c "python manage.py wait_for_db &&
              python manage.py migrate &&
              python manage.py runserver 0.0.0.0:8000"
    # sh -c => shell script 명령어, 0.0.0.0:8000으로 이미지의 host를 열어줌
    # 로컬에서 127.0.0.1:8000을 해주면 0.0.0.0:8000의 이미지와 연결됨
    # docker-compose up을 하면 command가 실행됨
    # docker-compose run --rm app sh -c 'django-admin startproject app .'으로 임시 컨테이너에서 프로젝트 시작 후 종료
    # --rm은 컨테이너가 종료됨과 동시에 삭제되는 옵션
    # 이후 docker-compose up으로 서버를 실행하는 컨테이너 생성 up이기 때문에 삭제 전까지 계속 존재함

    environment: # django한테 db 정보를 알려줘야함
      - DB_HOST=db
      - DB_NAME=lck
      - DB_USER=lck
      - DB_PASS=1234
    depends_on: # 어디에 의존할 거냐, db가 준비가 성공적으로 끝나면 app을 실행하겠다는 의미
      - db

  db: # PostgreSQL
    image: postgres:16-alpine
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=lck
      - POSTGRES_USER=lck
      - POSTGRES_PASSWORD=1234